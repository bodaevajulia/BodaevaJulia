# Инструкция по работе с Git

## Материалы 1-го семинара

* git init- *команда, которая инициализирует репозиторий в текущей директории*;

* git add- *команда, которая добавляет файл отслеживания*;

* git --version - *команда, которая показывает текущую версию Git*;

* git status - *команда, показывающая текущее состояние  Git*;

* git log - *команда, вызывающая журнал изменений*;

* git checkout - *команда переключения  между версиями*;

* git checkout master -*команда возврата к самому актуальному состоянию";

* git diff - -*команда, показывающая разницу между текущим файлом и сохраненным*.

## Материал 2-го семинара

## 1. Создание веток

* __*git branch branch_name*__ - команда, создающая новую ветку с именем *branch_name*

## 2. Слияние веток

* __git merge branch_name*__ - команда, осуществляющая слияние между текущей веткой (базовой) и branch_name

## 3. Конфликты на ветках

* *При наличии общих измененных строк в разных ветках при слиянии возникате конфликт. Разрешается он выбором наиболее приоритетной версии изменений*.

## 4. Редактирование сообщения коммита

* __*git commit --amend -m""__ - команда, позволяющая перезаписать и отредактировать сообщение последнего коммита

## Материалы 3-го семинара
## Работа с GitHub

Для совместной работы несколькими пользователями над одним проектом существует сервис Github, с помощью которого осуществляется функционирование системы контроля версий.
* Для начала работы необходимо пройти регистрацию и создать аккаунт. В этот аккаунт возможно загрузить любой локальный репозиторий, а также можно создать новый репозиторий непосредственно на портале Github.

* Команда _**git push**_ - доставляет изменения из локального репозитория в удаленный.

* Команда _**git pull**_ - забирает изменения из удаленного репозитория в локальный и делает merge.

* Команда _**git clone**_ - позволяет скопировать удаленный репозиторий в свой локальный (необходимо иметь ссылку, сгенерированную порталом github).

Когда мы хотим присоединиться к чьей-то работе через github, необходимо сделать _**Fork**_ (такая кнопка появится при заходе на требуемый удаленный репозиторий). После ее нажатия в нашем удаленном репозитории создается точная копия проекта. *Все изменения необходимо осуществлять только в отдельной вновь созданной ветке*.

Для доставки изменений с отдельной ветки существует удобный параметр команды push: 

_**git push --set-upstream origin "имя ветки"**_
